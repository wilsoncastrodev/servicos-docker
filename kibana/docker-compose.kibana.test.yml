services:
  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.3
    environment:
      - TZ=America/Sao_Paulo
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      # - ELASTICSEARCH_SERVICEACCOUNT_TOKEN=AAEAAWVsYXN0aWMva2liYW5hL2tpYmFuYS10b2tlbjpLcTlCUVNfdFQxYUpOdFVGTUZZRlpB
      - ELASTICSEARCH_USERNAME=wilsoncastrodev
      - ELASTICSEARCH_PASSWORD=FMaGG5wewU0jMRUo
    volumes:
      - ./kibana-app/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      web:
        ipv4_address: 10.0.9.27
    depends_on:
      - elasticsearch
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=web"
        - "traefik.http.routers.kibana.rule=Host(`kibana.test.wilsoncastro.dev`)"
        - "traefik.http.routers.kibana.entrypoints=https"
        - "traefik.http.routers.kibana.tls=true"
        - "traefik.http.routers.kibana.tls.certresolver=letsencrypt"
        - "traefik.http.services.kibana.loadbalancer.server.port=5601"
      replicas: 1
      restart_policy:
        condition: any
      update_config:
        parallelism: 1
        delay: 10s

networks:
  web:
    external: true

# Implanta uma stack do serviço "Kibana" no ambiente de teste
# sudo docker stack deploy -c docker-compose.kibana.test.yml kibana

# Implanta uma stack do serviço "Kibana" no ambiente de teste
# sudo docker stack deploy -c docker-compose.kibana.production.yml kibana

# Lista serviços Docker em execução
# sudo docker service ls

# Lista detalhes específicos do serviço "Kibana"
# sudo docker service ps kibana_kibana

# Exibe os logs do serviço "Kibana"
# sudo docker service logs kibana_kibana

# Remove o serviço "Kibana" do ambiente de teste
# sudo docker stack rm kibana